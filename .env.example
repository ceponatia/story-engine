# Story Engine Environment Configuration
# Copy this file to .env.local and configure for your environment

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# PostgreSQL - Core relational database (REQUIRED)
DATABASE_URL=postgresql://username:password@localhost:5432/storyengine

# Redis - Caching and session management (OPTIONAL - will use defaults)
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Qdrant - Vector search database (OPTIONAL - will use defaults)
QDRANT_URL=http://localhost:6333
QDRANT_HOST=localhost
QDRANT_PORT=6333
QDRANT_API_KEY=
QDRANT_TIMEOUT_MS=30000

# MongoDB - Document storage (OPTIONAL - will use defaults)
MONGODB_URL=mongodb://username:password@localhost:27017/storyengine
MONGODB_DATABASE=storyengine
MONGODB_MAX_POOL_SIZE=10
MONGODB_MIN_POOL_SIZE=1

# ==============================================================================
# DATABASE SECURITY
# ==============================================================================

# SSL Certificate path for production (OPTIONAL)
DB_SSL_CA_PATH=

# Database pool configuration
DB_POOL_SIZE=20

# ==============================================================================
# AUTHENTICATION & SECURITY
# ==============================================================================

# Better Auth Secret - CRITICAL: Generate secure 32+ character secret for production
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
BETTER_AUTH_SECRET=

# Application URL
BETTER_AUTH_URL=http://localhost:3000

# ==============================================================================
# AI INTEGRATION
# ==============================================================================

# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=mistral:instruct
AI_ENABLED=true

# ==============================================================================
# DEVELOPMENT & DEBUGGING
# ==============================================================================

# Logging configuration
NODE_ENV=development
LOG_LEVEL=debug
DEBUG_DB=true

# ==============================================================================
# DOCKER COMPOSE CREDENTIALS (for local development)
# ==============================================================================

# PostgreSQL container credentials
POSTGRES_USER=claude
POSTGRES_PASSWORD=yurikml2
POSTGRES_DB=storyengine

# MongoDB container credentials  
MONGO_INITDB_ROOT_USERNAME=storyengine
MONGO_INITDB_ROOT_PASSWORD=mongodb_password
MONGO_INITDB_DATABASE=storyengine

# ==============================================================================
# PRODUCTION DEPLOYMENT NOTES
# ==============================================================================

# For production deployment:
# 1. Generate secure BETTER_AUTH_SECRET (min 32 characters)
# 2. Use proper database URLs with authentication
# 3. Set NODE_ENV=production
# 4. Configure SSL certificates if required
# 5. Set appropriate LOG_LEVEL (info or error)
# 6. Disable DEBUG_DB in production